spring.cloud.kubernetes.enabled: false

spring:
  application:
    name: where-for-dinner-api-gateway

  session:
    timeout: 60m
  cloud:
    gateway:
      forwarded.enabled: false
#      forwarded.enabled: true
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
      routes:
      - id: where-for-dinner_search_route
        uri: ${where-for-dinner.search.uri}
        predicates:
        - Path=/api/search/**
        filters:
        - TokenRelay=
        - RewritePath=/search(?<segment>/?.*), $\{segment}
        - RemoveRequestHeader=Forwarded
      - id: where-for-dinner_availability_route
        uri: ${where-for-dinner.availability.uri}
        predicates:
        - Path=/api/availability/**
        filters:
        - TokenRelay=
        - RewritePath=/availability(?<segment>/?.*), $\{segment}
        - RemoveRequestHeader=Forwarded
      - id: where-for-dinner_ui_route
        uri: ${where-for-dinner.ui.uri}
        predicates:
        - Path=/diningsearch
      - id: where-for-dinner_ui_route
        uri: ${where-for-dinner.ui.uri}
        predicates:
        - Path=/**

##Default profile forwards to local instances.  Use for inner loop dev
#where-for-dinner:
#  ui:
#    uri: http://localhost:3000/   # default used by npm start
#  search:
#    uri: http://localhost:8081/
#  availability:
#    uri: http://localhost:8082/

#cloud profile forwards to tas instances.  Use for inner loop dev
where-for-dinner:
  tas-fqdn-apps-domain: apps.h2o-2-22522.h2o.vmware.com
  ui:
    uri: http://where-for-dinner-ui.${where-for-dinner.tas-fqdn-apps-domain}/
  search:
    uri: http://where-for-dinner-search.${where-for-dinner.tas-fqdn-apps-domain}/
  availability:
    uri: http://where-for-dinner-availability.${where-for-dinner.tas-fqdn-apps-domain}/

#---
#spring:
#  config:
#    activate:
#      on-cloud-platform: kubernetes
#
#where-for-dinner:
#  namespace: ${spring.cloud.kubernetes.client.namespace}
#  ui:
#    uri: http://where-for-dinner-ui.${where-for-dinner.namespace}/
#  search:
#    uri: http://where-for-dinner-search.${where-for-dinner.namespace}/
#  availability:
#    uri: http://where-for-dinner-availability.${where-for-dinner.namespace}/